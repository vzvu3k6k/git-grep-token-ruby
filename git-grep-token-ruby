#!/usr/bin/env ruby

require "parser/current"
require "shellwords"

word, opts = *ARGV
context = :nil
lines = []

cmd = "git grep --name-only #{Shellwords.escape(word)} #{[opts].flatten.compact.map{|a| Shellwords.escape(a)}.join(" ")}"

def search(node, &block)
  result = []
  node.children.each do |child|
    if block.call(child)
      result << child
      next
    end

    result += search(child, &block) if child.is_a?(Parser::AST::Node)
  end
  return result
end

`#{cmd}`.each_line do |file|
  file.strip!
  code = File.read(file)

  ast = Parser::CurrentRuby.parse(code)

  if ast.type != :begin
    ast = AST::Node.new(:begin, [ast])
  end

  search(ast) do |node|
    (node.is_a?(Parser::AST::Node) && node.type == :def && node.children[0] == word.to_sym)
  end.each do |node|
    exp = node.loc.expression
    start = exp.begin.line
    finish = exp.end.line
    puts "#{file}:#{start}"
    system(%Q!cat -n #{file} | sed -n #{start},#{finish}p | sed -e "1s/#{word}/\\x1b[01;31m\\0\\x1b[0m/" !)
  end
end
